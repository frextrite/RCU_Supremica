digraph state_automaton {
	center = true;
	// size = "700,800";
	nodesep = 0.7;
	{node [shape = plaintext, style=invis, label=""] "__init_not_atomic"};
	node [shape = ellipse, fontsize=10, color = green3];
	edge [fontsize=10];

	"__init_not_atomic" -> "not_atomic";

	/* Handling for read-lock, pirq dis, read-unlock, pirq en */
	"not_atomic" [label = "not_atomic"]; 
	"read_locked" [label = "read_locked"]; 
	"read_locked_special" [label = "read_locked_special"]; 
	"read_locked_special_atomic" [label = "read_locked_special_atomic"]; 
	"read_unlock_qs_deferred" [label = "read_unlock_qs_deferred"]; 

	"not_atomic" -> "read_locked" [ label = "read_lock_outer" ];

	"read_locked" -> "not_atomic" [ label = "read_unlock_outer" ];
	"read_locked" -> "read_locked_special" [ label = "tick_urgent" ];
	"read_locked" -> "read_locked_special" [ label = "context_switch" ];
	"read_locked" -> "read_locked_special" [ label = "expedited_ipi" ];

	"read_locked_special" -> "not_atomic" [ label = "read_unlock_outer_special" ];

	"read_locked_special" -> "read_locked_special_atomic" [ label = "atomic_enter" ];
	"read_locked_special_atomic" -> "read_locked_special" [ label = "atomic_exit" ];

	"read_locked_special_atomic" -> "read_unlock_qs_deferred" [ label = "read_unlock_outer_special" ];

	"read_unlock_qs_deferred" -> "not_atomic" [ label = "atomic_exit" ];

	{ rank = min ;
		"__init_not_atomic";
		"not_atomic";
	}
}
